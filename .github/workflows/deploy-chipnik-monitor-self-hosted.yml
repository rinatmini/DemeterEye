name: Deploy Chipnik Monitor API (Self-Hosted)

on:
  push:
    branches:
      - master
    paths:
      - "chipnik_monitor/**"
  workflow_dispatch:
  workflow_call:

env:
  APP_DIR: chipnik_monitor
  PYTHON_VERSION: "3.11"
  SERVICE_PORT: "8080"

jobs:
  deploy:
    runs-on:
      - self-hosted
      - Linux
      - X64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: "pip"
          cache-dependency-path: ${{ env.APP_DIR }}/requirements.txt

      - name: Install dependencies
        working-directory: ${{ env.APP_DIR }}
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Stop existing service
        shell: bash
        run: |
          if pgrep -f "uvicorn api:app" >/dev/null; then
            echo "Stopping existing Chipnik Monitor process"
            pkill -f "uvicorn api:app"
            sleep 5
          else
            echo "No existing Chipnik Monitor process found"
          fi

      - name: Start service
        env:
          EARTHDATA_BEARER_TOKEN: ${{ secrets.EARTHDATA_BEARER_TOKEN }}
          MONGO_URI: ${{ secrets.MONGO_URI }}
          MONGO_DB: ${{ secrets.MONGO_DB }}
          DAYS_BACK_LIMIT: ${{ vars.DAYS_BACK_LIMIT }}
        working-directory: ${{ env.APP_DIR }}
        shell: bash
        run: |
          for var in EARTHDATA_BEARER_TOKEN MONGO_URI MONGO_DB; do
            if [[ -z "${!var}" ]]; then
              echo "::error::Environment variable $var must be provided via repository secrets."
              exit 1
            fi
          done

          LOG_PATH="${HOME}/chipnik-monitor.log"
          echo "Starting Chipnik Monitor on port ${SERVICE_PORT}, logging to ${LOG_PATH}"

          nohup env \
            EARTHDATA_BEARER_TOKEN="${EARTHDATA_BEARER_TOKEN}" \
            MONGO_URI="${MONGO_URI}" \
            MONGO_DB="${MONGO_DB}" \
            DAYS_BACK_LIMIT="${DAYS_BACK_LIMIT:-2000}" \
            uvicorn api:app --host 0.0.0.0 --port "${SERVICE_PORT}" \
            > "${LOG_PATH}" 2>&1 &

          echo $! > "${HOME}/chipnik-monitor.pid"
          echo "Process started with PID $(cat "${HOME}/chipnik-monitor.pid")"

      - name: Verify service
        shell: bash
        run: |
          sleep 5
          if ! pgrep -f "uvicorn api:app" >/dev/null; then
            echo "::error::Chipnik Monitor service failed to start. Check logs at ${HOME}/chipnik-monitor.log"
            exit 1
          fi
          echo "Chipnik Monitor service is running"